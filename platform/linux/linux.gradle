tasks.register('exportLinux64', Copy.class) {
    dependsOn downloadJDKLinux64
    dependsOn jar
    dependsOn exportPlugins

    def icon = project.snapshot ? "icon_eap.png" : "icon.png"

    into 'build/export/linux64'
    into('') {
        from file('LICENSE.txt')
        from file('platform/linux/mcreator.sh') rename('mcreator.sh', 'mcreator.shdos')
        from file('src/main/resources/net/mcreator/ui/res/' + icon) rename(icon, 'icon.png')
    }
    into('lib') {
        from 'build/libs'
        from configurations.export
        from configurations.linux64
    }
    into('plugins') { from 'build/plugins/' }
    into('license') { from 'license' }
    into('jdk') { from 'jdk/jdk21_linux_64' }
    doLast {
        convertCRLF(file('build/export/linux64/mcreator.shdos'), file('build/export/linux64/mcreator.sh'))
        delete 'build/export/linux64/mcreator.shdos'
    }
}

tasks.register('tarLinux64', Tar.class) {
    dependsOn exportLinux64

    into ('MCreator' + (String) project.mcreatorconf.getProperty('mcreator').replace(".", "").replace(" ", "")) {
        from('build/export/linux64/') { exclude "mcreator.sh", "jdk/bin*" }
        from('build/export/linux64/mcreator.sh') { fileMode = 0775 }
        from('build/export/linux64/jdk/bin/') { fileMode = 0775 } into 'jdk/bin/'
    }

    destinationDirectory = file('build/export/')
    compression = Compression.GZIP
    archiveFileName = 'MCreator ' + (String) project.mcreatorconf.getProperty('mcreator') + ' Linux 64bit.tar.gz'
}

tasks.register('exportLinux') {
    group 'export'
    dependsOn tarLinux64

    doLast {
        delete 'build/export/linux64'
    }
}

static void convertCRLF(File input, File out) {
    out << input.text.replaceAll('\r\n', '\n')
}
