plugins {
    id "java"
    id "idea"
    id "de.undercouch.download" version "4.1.1"
    id 'edu.sc.seis.launch4j' version '2.4.9'
    id 'org.jetbrains.gradle.plugin.idea-ext' version '0.10'
}

repositories {
    jcenter()
    maven {
        url "https://repo.gradle.org/gradle/libs-releases-local/"
    }
    flatDir { dirs 'lib' }
}

project.ext.mcreatorconf = new Properties()
file('src/main/resources/mcreator.conf').withInputStream { project.mcreatorconf.load(it) }

group = 'net.mcreator'
version = project.mcreatorconf.getProperty('mcreator')
javadoc.source = sourceSets.main.allJava
compileJava.options.encoding = 'UTF-8'
compileJava.options.debug
tasks.withType(JavaCompile) { options.encoding = 'UTF-8' }

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

idea {
    module {
        inheritOutputDirs = true
        [".gradle", "build", "gradle", "jdk"].each {
            excludeDirs << file("$buildDir/$it")
        }
    }
}

dependencies {
    // from lib folder
    implementation fileTree(dir: 'lib', include: ['*.jar'])

    // from maven
    implementation group: 'commons-io', name: 'commons-io', version: '2.6' // 2.7+ problem with : in filenames: NTFS ADS separator
    implementation group: 'foxtrot', name: 'foxtrot-core', version: '4.0'
    implementation group: 'org.freemarker', name: 'freemarker', version: '2.3.30'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'
    implementation group: 'com.github.sps.junidecode', name: 'junidecode', version: '0.3'
    implementation group: 'org.jboss.forge.roaster', name: 'roaster-api', version: '2.22.2.Final'
    implementation group: 'org.jboss.forge.roaster', name: 'roaster-jdt', version: '2.22.2.Final'
    implementation group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version: '1.15'
    implementation group: 'com.fifesoft', name: 'rsyntaxtextarea', version: '3.1.1'
    implementation group: 'com.fifesoft', name: 'autocomplete', version: '3.1.0'
    implementation (group: 'com.fifesoft', name: 'languagesupport', version: '3.1.0') { dep ->
        dep.exclude group: 'org.mozilla', module: 'rhino'
    }
    implementation group: 'org.reflections', name: 'reflections', version: '0.9.9' // https://github.com/ronmamo/reflections/issues/81
    implementation group: 'de.javagl', name: 'obj', version: '0.3.0'
    implementation group: 'com.univocity', name: 'univocity-parsers', version: '2.9.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.14.0'
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '5.9.0.202009080501-r'
    implementation group: 'org.slf4j', name: 'slf4j-nop', version: '1.7.30'
    implementation group: 'org.gradle', name: 'gradle-tooling-api', version: '6.7'
    implementation group: 'net.java.balloontip', name: 'balloontip', version: '1.2.4.1'

    implementation group: 'com.atlassian.commonmark', name: 'commonmark', version: '0.15.2'
    implementation group: 'com.atlassian.commonmark', name: 'commonmark-ext-autolink', version: '0.15.2'
    implementation group: 'com.atlassian.commonmark', name: 'commonmark-ext-gfm-tables', version: '0.15.2'

    implementation group: 'club.minnced', name: 'java-discord-rpc', version: '2.0.2'

    // for annotations
    compileOnly group: 'org.jetbrains', name: 'annotations', version: '17.0.0'

    // test dependencies
    testImplementation group: 'junit', name: 'junit', version: '4.13'
}

test {
    testLogging.showStandardStreams = true
    testLogging.exceptionFormat = 'full'
    maxHeapSize = "1024m"
}

jar {
    archiveFileName = 'mcreator.jar'
    manifest {
        attributes(
                'Main-Class': 'net.mcreator.Launcher',
                'MCreator-Version': project.mcreatorconf.getProperty('mcreator'),
                'Build-Date': new Date().format('wwuHH')
        )
    }
}

task runMCreator(type: JavaExec, dependsOn: jar) {
    classpath += sourceSets.main.runtimeClasspath
    main = "net.mcreator.Launcher"
}

apply from: 'platform/setup.gradle'
apply from: 'platform/export.gradle'