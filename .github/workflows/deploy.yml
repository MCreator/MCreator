name: Deploy binaries

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Release type (snapshot/release)'
        required: true
        default: 'snapshot'

jobs:
  export1:
    name: Build and Export (all but MacOS)
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: 'read'
      id-token: 'write'
    outputs:
      mcr_version: ${{ steps.determineExportVersion.outputs.mcr_version }}
      mc_version: ${{ steps.determineExportVersion.outputs.mc_version }}
      build_date: ${{ steps.determineExportVersion.outputs.build_date }}
    steps:
      - uses: actions/checkout@v4
      - name: Verify Repository
        if: github.repository != 'MCreator/MCreator' && github.repository != 'KlemenDEV/MCreator'
        run: |
          cat << EOF
          ⚠️Deploy action is only intended to be run from the official MCreator's repository. ⚠️
          We do not allow custom distributions of the software under MCreator brand to be distributed publicly.
          For more information, read LICENSE.txt.
          EOF
          exit 1
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17.0.10+7'
          distribution: 'temurin'
      - name: Install Dependencies
        run: |
          sudo apt-get install -y mkisofs nsis nsis-pluginapi
          wget https://nsis.sourceforge.io/mediawiki/images/d/d3/LockedList.zip
          sudo unzip LockedList.zip -d /usr/share/nsis/
      - uses: google-github-actions/auth@a6e2e39c0a0331da29f7fd2c2a20a427e8d3ad1f
        name: Authenticate to Google Cloud
        with:
          workload_identity_provider: ${{ secrets.GC_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GC_SERVICE_ACCOUNT }}
      - uses: google-github-actions/setup-gcloud@98ddc00a17442e89a24bbf282954a3b65ce6d200
        name: Set up Google Cloud SDK
      - name: 'gcloud'
        run: |-
          gcloud projects get-iam-policy pylo-mcreator
      - name: Build and Export Release Using Gradle
        if: github.event.inputs.release-type == 'release'
        env:
          WIN_CERT_PEM: ${{ secrets.WIN_CERT_PEM }}
          WIN_CERT_KEYNAME: ${{ secrets.WIN_CERT_KEYNAME }}
          WIN_CERT_KEYSTORE: ${{ secrets.WIN_CERT_KEYSTORE }}
        run: |
          export WIN_CERT_STOREPASS="$(gcloud auth print-access-token)"
          echo "$WIN_CERT_PEM" > codesign-chain.pem
          xvfb-run -a ./gradlew generateExportReport exportWindows exportLinux
      - name: Build and Export Snapshot Using Gradle
        if: github.event.inputs.release-type == 'snapshot'
        env:
          WIN_CERT_PEM: ${{ secrets.WIN_CERT_PEM }}
          WIN_CERT_KEYNAME: ${{ secrets.WIN_CERT_KEYNAME }}
          WIN_CERT_KEYSTORE: ${{ secrets.WIN_CERT_KEYSTORE }}
        run: |
          export WIN_CERT_STOREPASS="$(gcloud auth print-access-token)"
          echo "$WIN_CERT_PEM" > codesign-chain.pem
          xvfb-run -a ./gradlew generateExportReport exportWindows exportLinux -Psnapshot=true
      - name: Determine Export Version
        id: determineExportVersion
        run: |
          MCR_VERSION=$(cat build/reports/export.txt | grep "mcreator=" | cut -d'=' -f2)
          MC_VERSION=$(cat build/reports/export.txt | grep "minecraft=" | cut -d'=' -f2)
          BUILD_DATE=$(cat build/reports/export.txt | grep "builddate=" | cut -d'=' -f2)
          echo "MCR_VERSION=$MCR_VERSION" >> $GITHUB_ENV
          echo "MC_VERSION=$MC_VERSION" >> $GITHUB_ENV
          echo "BUILD_DATE=$BUILD_DATE" >> $GITHUB_ENV
          echo "mcr_version=$MCR_VERSION" >> $GITHUB_OUTPUT
          echo "mc_version=$MC_VERSION" >> $GITHUB_OUTPUT
          echo "build_date=$BUILD_DATE" >> $GITHUB_OUTPUT
      - name: Upload Binaries and Tag Release
        uses: Pylo/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ env.MCR_VERSION }}
          release_name: ${{ env.MCR_VERSION }}
          prerelease: ${{ github.event.inputs.release-type == 'snapshot' }}
          file_glob: true
          file: build/export/*
          body: >
            ### **Download: https://mcreator.net/download**
            
            ### Changelog: https://mcreator.net/changelog
            
            <!--[[
            {
            "minecraft": "${{ env.MC_VERSION }}"
            }
            ]]-->
          overwrite: true
  export2:
    name: Build and Export (only MacOS)
    needs: export1
    runs-on: macos-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17.0.10+7'
          distribution: 'temurin'
      - name: Install Dependencies
        run: |
          brew install create-dmg
      - name: Build and Export Release Using Gradle
        if: github.event.inputs.release-type == 'release'
        run: ./gradlew generateExportReport exportMac -Pbuilddate=${{ needs.export1.outputs.build_date }}
      - name: Build and Export Snapshot Using Gradle
        if: github.event.inputs.release-type == 'snapshot'
        run: ./gradlew generateExportReport exportMac -Psnapshot=true -Pbuilddate=${{ needs.export1.outputs.build_date }}
      - name: Upload Binaries and Tag Release
        uses: Pylo/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ needs.export1.outputs.mcr_version }}
          release_name: ${{ needs.export1.outputs.mcr_version }}
          prerelease: ${{ github.event.inputs.release-type == 'snapshot' }}
          file_glob: true
          file: build/export/*
          body: >
            ### **Download: https://mcreator.net/download**
            
            ### Changelog: https://mcreator.net/changelog
            
            <!--[[
            {
            "minecraft": "${{ needs.export1.outputs.mc_version }}"
            }
            ]]-->
          overwrite: true