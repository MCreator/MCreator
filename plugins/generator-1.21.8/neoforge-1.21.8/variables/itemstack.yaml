defaultvalue: ItemStack.EMPTY
scopes:
  local:
    init: ${var.getType().getJavaType(generator.getWorkspace())} ${var.getName()} = ${var.getType().getDefaultValue(generator.getWorkspace())};
    get: /*@ItemStack*/${name}
    set: <#include "mcitems.ftl"> ${name} = ${mappedMCItemToItemStackCode(value, 1)}.copy();
  global_session:
    init: public static ItemStack ${var.getName()} = ItemStack.EMPTY;
    get: /*@ItemStack*/${JavaModName}Variables.${name}
    set: <#include "mcitems.ftl"> ${JavaModName}Variables.${name} = ${mappedMCItemToItemStackCode(value, 1)}.copy();
  global_world:
    init: public ItemStack ${var.getName()} = ItemStack.EMPTY;
    read: ${var.getName()} = ItemStack.OPTIONAL_CODEC.parse(NbtOps.INSTANCE, nbt.getCompoundOrEmpty("${var.getName()}")).result().orElse(ItemStack.EMPTY);
    write: nbt.put("${var.getName()}", (CompoundTag) ItemStack.OPTIONAL_CODEC.encode(${var.getName()}, NbtOps.INSTANCE, new CompoundTag()).result().orElse(new CompoundTag()));
    get: /*@ItemStack*/${JavaModName}Variables.WorldVariables.get(world).${name}
    set: |
      <#include "mcitems.ftl">
      ${JavaModName}Variables.WorldVariables.get(world).${name} = ${mappedMCItemToItemStackCode(value, 1)}.copy();
      ${JavaModName}Variables.WorldVariables.get(world).syncData(world);
  global_map:
    init: public ItemStack ${var.getName()} = ItemStack.EMPTY;
    read: ${var.getName()} = ItemStack.OPTIONAL_CODEC.parse(NbtOps.INSTANCE, nbt.getCompoundOrEmpty("${var.getName()}")).result().orElse(ItemStack.EMPTY);
    write: nbt.put("${var.getName()}", (CompoundTag) ItemStack.OPTIONAL_CODEC.encode(${var.getName()}, NbtOps.INSTANCE, new CompoundTag()).result().orElse(new CompoundTag()));
    get: /*@ItemStack*/${JavaModName}Variables.MapVariables.get(world).${name}
    set: |
      <#include "mcitems.ftl">
      ${JavaModName}Variables.MapVariables.get(world).${name} = ${mappedMCItemToItemStackCode(value, 1)}.copy();
      ${JavaModName}Variables.MapVariables.get(world).syncData(world);
  player_lifetime:
    init: public ItemStack ${var.getName()} = ItemStack.EMPTY;
    read: ${var.getName()} = input.read("${var.getName()}", ItemStack.OPTIONAL_CODEC).orElse(ItemStack.EMPTY);
    write: output.store("${var.getName()}", ItemStack.OPTIONAL_CODEC, ${var.getName()});
    get: /*@ItemStack*/${entity}.getData(${JavaModName}Variables.PLAYER_VARIABLES).${name}
    set: |
      <#include "mcitems.ftl">
      {
        ${JavaModName}Variables.PlayerVariables _vars = ${entity}.getData(${JavaModName}Variables.PLAYER_VARIABLES);
        _vars.${name} = ${mappedMCItemToItemStackCode(value, 1)}.copy();
        _vars.syncPlayerVariables(${entity});
      }
  player_persistent:
    init: public ItemStack ${var.getName()} = ItemStack.EMPTY;
    read: ${var.getName()} = input.read("${var.getName()}", ItemStack.OPTIONAL_CODEC).orElse(ItemStack.EMPTY);
    write: output.store("${var.getName()}", ItemStack.OPTIONAL_CODEC, ${var.getName()});
    get: /*@ItemStack*/${entity}.getData(${JavaModName}Variables.PLAYER_VARIABLES).${name}
    set: |
      <#include "mcitems.ftl">
      {
        ${JavaModName}Variables.PlayerVariables _vars = ${entity}.getData(${JavaModName}Variables.PLAYER_VARIABLES);
        _vars.${name} = ${mappedMCItemToItemStackCode(value, 1)}.copy();
        _vars.syncPlayerVariables(${entity});
      }
