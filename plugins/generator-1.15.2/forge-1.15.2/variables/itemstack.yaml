defaultvalue: ItemStack.EMPTY
scopes:
  local:
    get: ${name}
    set: ${name} = (${javaType}) ${value};
  global_session:
    init: public static ItemStack ${var.getName()} = ItemStack.EMPTY;
    get: ${JavaModName}Variables.${name}
    set: ${JavaModName}Variables.${name} = ${mappedMCItemToItemStackCode(value, 1)};
  global_world:
    init: public ItemStack ${var.getName()} = ItemStack.EMPTY;
    read: ${var.getName()} = ItemStack.read(nbt.getCompound("${var.getName()}"));
    write: nbt.put("${var.getName()}", ${var.getName()}.write(new CompoundNBT()));
    get: ${JavaModName}Variables.WorldVariables.get(world).${name}
    set: |
      ${JavaModName}Variables.WorldVariables.get(world).${name} = ${mappedMCItemToItemStackCode(value, 1)};
      ${JavaModName}Variables.WorldVariables.get(world).syncData(world);
  global_map:
    init: public ItemStack ${var.getName()} = ItemStack.EMPTY;
    read: ${var.getName()} = ItemStack.read(nbt.getCompound("${var.getName()}"));
    write: nbt.put("${var.getName()}", ${var.getName()}.write(new CompoundNBT()));
    get: ${JavaModName}Variables.MapVariables.get(world).${name}
    set: |
      ${JavaModName}Variables.MapVariables.get(world).${name} = ${mappedMCItemToItemStackCode(value, 1)};
      ${JavaModName}Variables.MapVariables.get(world).syncData(world);
  player_lifetime:
    init: public ItemStack ${var.getName()} = ItemStack.EMPTY;
    read: instance.${var.getName()} = ItemStack.read(nbt.getCompound("${var.getName()}"));
    write: nbt.put("${var.getName()}", instance.${var.getName()}.write(new CompoundNBT()));
    get: |
      ((entity.getCapability(${JavaModName}Variables.PLAYER_VARIABLES_CAPABILITY, null)
        .orElse(new ${JavaModName}Variables.PlayerVariables())).${name})
    set: |
      {
        ItemStack _setval = ${mappedMCItemToItemStackCode(value, 1)};
        entity.getCapability(${JavaModName}Variables.PLAYER_VARIABLES_CAPABILITY, null).ifPresent(capability -> {
          capability.${name} = _setval;
          capability.syncPlayerVariables(entity);
        });
      }
  player_persistent:
    init: public ItemStack ${var.getName()} = ItemStack.EMPTY;
    read: instance.${var.getName()} = ItemStack.read(nbt.getCompound("${var.getName()}"));
    write: nbt.put("${var.getName()}", instance.${var.getName()}.write(new CompoundNBT()));
    get: |
      ((entity.getCapability(${JavaModName}Variables.PLAYER_VARIABLES_CAPABILITY, null)
        .orElse(new ${JavaModName}Variables.PlayerVariables())).${name})
    set: |
      {
        ItemStack _setval = ${mappedMCItemToItemStackCode(value, 1)};
        entity.getCapability(${JavaModName}Variables.PLAYER_VARIABLES_CAPABILITY, null).ifPresent(capability -> {
          capability.${name} = _setval;
          capability.syncPlayerVariables(entity);
        });
      }
